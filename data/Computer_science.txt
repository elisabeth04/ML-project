computer science is the study of computation, automation, and information. computer science spans theoretical disciplines (such as algorithms, theory of computation, and information theory) to practical disciplines (including the design and implementation of hardware and software). computer science is generally considered an area of academic research and distinct from computer programming.algorithms and data structures are central to computer science.
the theory of computation concerns abstract models of computation and general classes of problems that can be solved using them. the fields of cryptography and computer security involve studying the means for secure communication and for preventing security vulnerabilities. computer graphics and computational geometry address the generation of images. programming language theory considers approaches to the description of computational processes, and database theory concerns the management of repositories of data. human–computer interaction investigates the interfaces through which humans and computers interact, and software engineering focuses on the design and principles behind developing software. areas such as operating systems, networks and embedded systems investigate the principles and design behind complex systems. computer architecture describes the construction of computer components and computer-operated equipment. artificial intelligence and machine learning aim to synthesize goal-orientated processes such as problem-solving, decision-making, environmental adaptation, planning and learning found in humans and animals. within artificial intelligence, computer vision aims to understand and process image and video data, while natural-language processing aims to understand and process textual and linguistic data.
the fundamental concern of computer science is determining what can and cannot be automated. the turing award is generally recognized as the highest distinction in computer science.


== history ==

the earliest foundations of what would become computer science predate the invention of the modern digital computer. machines for calculating fixed numerical tasks such as the abacus have existed since antiquity, aiding in computations such as multiplication and division. algorithms for performing computations have existed since antiquity, even before the development of sophisticated computing equipment.
wilhelm schickard designed and constructed the first working mechanical calculator in 1623. in 1673, gottfried leibniz demonstrated a digital mechanical calculator, called the stepped reckoner. leibniz may be considered the first computer scientist and information theorist, for, among other reasons, documenting the binary number system. in 1820, thomas de colmar launched the mechanical calculator industry when he invented his simplified arithmometer, the first calculating machine strong enough and reliable enough to be used daily in an office environment. charles babbage started the design of the first automatic mechanical calculator, his difference engine, in 1822, which eventually gave him the idea of the first programmable mechanical calculator, his analytical engine. he started developing this machine in 1834, and "in less than two years, he had sketched out many of the salient features of the modern computer". "a crucial step was the adoption of a punched card system derived from the jacquard loom" making it infinitely programmable. in 1843, during the translation of a french article on the analytical engine, ada lovelace wrote, in one of the many notes she included, an algorithm to compute the bernoulli numbers, which is considered to be the first published algorithm ever specifically tailored for implementation on a computer. around 1885, herman hollerith invented the tabulator, which used punched cards to process statistical information; eventually his company became part of ibm. following babbage, although unaware of his earlier work, percy ludgate in 1909 published the 2nd of the only two designs for mechanical analytical engines in history. in 1937, one hundred years after babbage's impossible dream, howard aiken convinced ibm, which was making all kinds of punched card equipment and was also in the calculator business to develop his giant programmable calculator, the ascc/harvard mark i, based on babbage's analytical engine, which itself used cards and a central computing unit. when the machine was finished, some hailed it as "babbage's dream come true".
during the 1940s, with the development of new and more powerful computing machines such as the atanasoff–berry computer and eniac, the term computer came to refer to the machines rather than their human predecessors. as it became clear that computers could be used for more than just mathematical calculations, the field of computer science broadened to study computation in general. in 1945, ibm founded the watson scientific computing laboratory at columbia university in new york city. the renovated fraternity house on manhattan's west side was ibm's first laboratory devoted to pure science. the lab is the forerunner of ibm's research division, which today operates research facilities around the world. ultimately, the close relationship between ibm and the university was instrumental in the emergence of a new scientific discipline, with columbia offering one of the first academic-credit courses in computer science in 1946. computer science began to be established as a distinct academic discipline in the 1950s and early 1960s. the world's first computer science degree program, the cambridge diploma in computer science, began at the university of cambridge computer laboratory in 1953. the first computer science department in the united states was formed at purdue university in 1962. since practical computers became available, many applications of computing have become distinct areas of study in their own rights.


== etymology ==

although first proposed in 1956, the term "computer science" appears in a 1959 article in communications of the acm,
in which louis fein argues for the creation of a graduate school in computer sciences analogous to the creation of harvard business school in 1921, justifying the name by arguing that, like management science, the subject is applied and interdisciplinary in nature, while having the characteristics typical of an academic discipline.
his efforts, and those of others such as numerical analyst george forsythe, were rewarded: universities went on to create such departments, starting with purdue in 1962. despite its name, a significant amount of computer science does not involve the study of computers themselves. because of this, several alternative names have been proposed. certain departments of major universities prefer the term computing science, to emphasize precisely that difference. danish scientist peter naur suggested the term datalogy, to reflect the fact that the scientific discipline revolves around data and data treatment, while not necessarily involving computers. the first scientific institution to use the term was the department of datalogy at the university of copenhagen, founded in 1969, with peter naur being the first professor in datalogy. the term is used mainly in the scandinavian countries. an alternative term, also proposed by naur, is data science; this is now used for a multi-disciplinary field of data analysis, including statistics and databases.
in the early days of computing, a number of terms for the practitioners of the field of computing were suggested in the communications of the acm—turingineer, turologist, flow-charts-man, applied meta-mathematician, and applied epistemologist. three months later in the same journal, comptologist was suggested, followed next year by hypologist. the term computics has also been suggested. in europe, terms derived from contracted translations of the expression "automatic information" (e.g. "informazione automatica" in italian) or "information and mathematics" are often used, e.g. informatique (french), informatik (german), informatica (italian, dutch), informática (spanish, portuguese), informatika (slavic languages and hungarian) or pliroforiki (πληροφορική, which means informatics) in greek. similar words have also been adopted in the uk (as in the school of informatics, university of edinburgh). "in the u.s., however, informatics is linked with applied computing, or computing in the context of another domain."a folkloric quotation, often attributed to—but almost certainly not first formulated by—edsger dijkstra, states that "computer science is no more about computers than astronomy is about telescopes." the design and deployment of computers and computer systems is generally considered the province of disciplines other than computer science. for example, the study of computer hardware is usually considered part of computer engineering, while the study of commercial computer systems and their deployment is often called information technology or information systems. however, there has been much cross-fertilization of ideas between the various computer-related disciplines. computer science research also often intersects other disciplines, such as cognitive science, linguistics, mathematics, physics, biology, earth science, statistics, philosophy, and logic.
computer science is considered by some to have a much closer relationship with mathematics than many scientific disciplines, with some observers saying that computing is a mathematical science. early computer science was strongly influenced by the work of mathematicians such as kurt gödel, alan turing, john von neumann, rózsa péter and alonzo church and there continues to be a useful interchange of ideas between the two fields in areas such as mathematical logic, category theory, domain theory, and algebra.the relationship between computer science and software engineering is a contentious issue, which is further muddied by disputes over what the term "software engineering" means, and how computer science is defined. david parnas, taking a cue from the relationship between other engineering and science disciplines, has claimed that the principal focus of computer science is studying the properties of computation in general, while the principal focus of software engineering is the design of specific computations to achieve practical goals, making the two separate but complementary disciplines.the academic, political, and funding aspects of computer science tend to depend on whether a department is formed with a mathematical emphasis or with an engineering emphasis. computer science departments with a mathematics emphasis and with a numerical orientation consider alignment with computational science. both types of departments tend to make efforts to bridge the field educationally if not across all research.


== philosophy ==


=== epistemology of computer science ===
despite the word "science" in its name, there is debate over whether or not computer science is a discipline of science, mathematics, or engineering. allen newell and herbert a. simon argued in 1975, computer science is an empirical discipline. we would have called it an experimental science, but like astronomy, economics, and geology, some of its unique forms of observation and experience do not fit a narrow stereotype of the experimental method. nonetheless, they are experiments. each new machine that is built is an experiment. actually constructing the machine poses a question to nature; and we listen for the answer by observing the machine in operation and analyzing it by all analytical and measurement means available. it has since been argued that computer science can be classified as an empirical science since it makes use of empirical testing to evaluate the correctness of programs, but a problem remains in defining the laws and theorems of computer science (if any exist) and defining the nature of experiments in computer science. proponents of classifying computer science as an engineering discipline argue that the reliability of computational systems is investigated in the same way as bridges in civil engineering and airplanes in aerospace engineering. they also argue that while empirical sciences observe what presently exists, computer science observes what is possible to exist and while scientists discover laws from observation, no proper laws have been found in computer science and it is instead concerned with creating phenomena.proponents of classifying computer science as a mathematical discipline argue that computer programs are physical realizations of mathematical entities and programs can be deductively reasoned through mathematical formal methods. computer scientists edsger w. dijkstra and tony hoare regard instructions for computer programs as mathematical sentences and interpret formal semantics for programming languages as mathematical axiomatic systems.


=== paradigms of computer science ===
a number of computer scientists have argued for the distinction of three separate paradigms in computer science. peter wegner argued that those paradigms are science, technology, and mathematics. peter denning's working group argued that they are theory, abstraction (modeling), and design. amnon h. eden described them as the "rationalist paradigm" (which treats computer science as a branch of mathematics, which is prevalent in theoretical computer science, and mainly employs deductive reasoning), the "technocratic paradigm" (which might be found in engineering approaches, most prominently in software engineering), and the "scientific paradigm" (which approaches computer-related artifacts from the empirical perspective of natural sciences, identifiable in some branches of artificial intelligence).
computer science focuses on methods involved in design, specification, programming, verification, implementation and testing of human-made computing systems.


== fields ==
computer science is no more about computers than astronomy is about telescopes.

as a discipline, computer science spans a range of topics from theoretical studies of algorithms and the limits of computation to the practical issues of implementing computing systems in hardware and software.csab, formerly called computing sciences accreditation board—which is made up of representatives of the association for computing machinery (acm), and the ieee computer society (ieee cs)—identifies four areas that it considers crucial to the discipline of computer science: theory of computation, algorithms and data structures, programming methodology and languages, and computer elements and architecture. in addition to these four areas, csab also identifies fields such as software engineering, artificial intelligence, computer networking and communication, database systems, parallel computation, distributed computation, human–computer interaction, computer graphics, operating systems, and numerical and symbolic computation as being important areas of computer science.


=== theoretical computer science ===

theoretical computer science is mathematical and abstract in spirit, but it derives its motivation from the practical and everyday computation. its aim is to understand the nature of computation and, as a consequence of this understanding, provide more efficient methodologies.


==== theory of computation ====

according to peter denning, the fundamental question underlying computer science is, "what can be automated?" theory of computation is focused on answering fundamental questions about what can be computed and what amount of resources are required to perform those computations. in an effort to answer the first question, computability theory examines which computational problems are solvable on various theoretical models of computation. the second question is addressed by computational complexity theory, which studies the time and space costs associated with different approaches to solving a multitude of computational problems.
the famous p = np? problem, one of the millennium prize problems, is an open problem in the theory of computation.


==== information and coding theory ====

information theory, closely related to probability and statistics, is related to the quantification of information. this was developed by claude shannon to find fundamental limits on signal processing operations such as compressing data and on reliably storing and communicating data.
coding theory is the study of the properties of codes (systems for converting information from one form to another) and their fitness for a specific application. codes are used for data compression, cryptography, error detection and correction, and more recently also for network coding. codes are studied for the purpose of designing efficient and reliable data transmission methods.


==== data structures and algorithms ====
data structures and algorithms are the studies of commonly used computational methods and their computational efficiency.


==== programming language theory and formal methods ====

programming language theory is a branch of computer science that deals with the design, implementation, analysis, characterization, and classification of programming languages and their individual features. it falls within the discipline of computer science, both depending on and affecting mathematics, software engineering, and linguistics. it is an active research area, with numerous dedicated academic journals.
formal methods are a particular kind of mathematically based technique for the specification, development and verification of software and hardware systems. the use of formal methods for software and hardware design is motivated by the expectation that, as in other engineering disciplines, performing appropriate mathematical analysis can contribute to the reliability and robustness of a design. they form an important theoretical underpinning for software engineering, especially where safety or security is involved. formal methods are a useful adjunct to software testing since they help avoid errors and can also give a framework for testing. for industrial use, tool support is required. however, the high cost of using formal methods means that they are usually only used in the development of high-integrity and life-critical systems, where safety or security is of utmost importance. formal methods are best described as the application of a fairly broad variety of theoretical computer science fundamentals, in particular logic calculi, formal languages, automata theory, and program semantics, but also type systems and algebraic data types to problems in software and hardware specification and verification.


=== computer systems and computational processes ===


==== artificial intelligence ====

artificial intelligence (ai) aims to or is required to synthesize goal-orientated processes such as problem-solving, decision-making, environmental adaptation, learning, and communication found in humans and animals. from its origins in cybernetics and in the dartmouth conference (1956), artificial intelligence research has been necessarily cross-disciplinary, drawing on areas of expertise such as applied mathematics, symbolic logic, semiotics, electrical engineering, philosophy of mind, neurophysiology, and social intelligence. ai is associated in the popular mind with robotic development, but the main field of practical application has been as an embedded component in areas of software development, which require computational understanding. the starting point in the late 1940s was alan turing's question "can computers think?", and the question remains effectively unanswered, although the turing test is still used to assess computer output on the scale of human intelligence. but the automation of evaluative and predictive tasks has been increasingly successful as a substitute for human monitoring and intervention in domains of computer application involving complex real-world data.


==== computer architecture and organization ====

computer architecture, or digital computer organization, is the conceptual design and fundamental operational structure of a computer system. it focuses largely on the way by which the central processing unit performs internally and accesses addresses in memory. computer engineers study computational logic and design of computer hardware, from individual processor components, microcontrollers, personal computers to supercomputers and embedded systems. the term “architecture” in computer literature can be traced to the work of lyle r. johnson and frederick p. brooks, jr., members of the machine organization department in ibm's main research center in 1959.


==== concurrent, parallel and distributed computing ====

concurrency is a property of systems in which several computations are executing simultaneously, and potentially interacting with each other. a number of mathematical models have been developed for general concurrent computation including petri nets, process calculi and the parallel random access machine model. when multiple computers are connected in a network while using concurrency, this is known as a distributed system. computers within that distributed system have their own private memory, and information can be exchanged to achieve common goals.


==== computer networks ====

this branch of computer science aims to manage networks between computers worldwide.


==== computer security and cryptography ====

computer security is a branch of computer technology with the objective of protecting information from unauthorized access, disruption, or modification while maintaining the accessibility and usability of the system for its intended users.
historical cryptography is the art of writing and deciphering secret messages. modern cryptography is the scientific study of problems relating to distributed computations that can be attacked. technologies studied in modern cryptography include symmetric and asymmetric encryption, digital signatures, cryptographic hash functions, key-agreement protocols, blockchain, zero-knowledge proofs, and garbled circuits.


==== databases and data mining ====

a database is intended to organize, store, and retrieve large amounts of data easily. digital databases are managed using database management systems to store, create, maintain, and search data, through database models and query languages. data mining is a process of discovering patterns in large data sets.


==== computer graphics and visualization ====

computer graphics is the study of digital visual contents and involves the synthesis and manipulation of image data. the study is connected to many other fields in computer science, including computer vision, image processing, and computational geometry, and is heavily applied in the fields of special effects and video games.


==== image and sound processing ====

information can take the form of images, sound, video or other multimedia. bits of information can be streamed via signals. its processing is the central notion of informatics, the european view on computing, which studies information processing algorithms independently of the type of information carrier - whether it is electrical, mechanical or biological. this field plays important role in information theory, telecommunications, information engineering and has applications in medical image computing and speech synthesis, among others. what is the lower bound on the complexity of fast fourier transform algorithms? is one of unsolved problems in theoretical computer science.


=== applied computer science ===


==== computational science, finance and engineering ====

scientific computing (or computational science) is the field of study concerned with constructing mathematical models and quantitative analysis techniques and using computers to analyze and solve scientific problems. a major usage of scientific computing is simulation of various processes, including computational fluid dynamics, physical, electrical, and electronic systems and circuits, as well as societies and social situations (notably war games) along with their habitats, among many others. modern computers enable optimization of such designs as complete aircraft. notable in electrical and electronic circuit design are spice, as well as software for physical realization of new (or modified) designs. the latter includes essential design software for integrated circuits.


==== social computing and human–computer interaction ====

social computing is an area that is concerned with the intersection of social behavior and computational systems. human–computer interaction research develops theories, principles, and guidelines for user interface designers.


==== software engineering ====

software engineering is the study of designing, implementing, and modifying the software in order to ensure it is of high quality, affordable, maintainable, and fast to build. it is a systematic approach to software design, involving the application of engineering practices to software. software engineering deals with the organizing and analyzing of software—it doesn't just deal with the creation or manufacture of new software, but its internal arrangement and maintenance. for example software testing, systems engineering, technical debt and software development processes.


== discoveries ==
the philosopher of computing bill rapaport noted three great insights of computer science:
gottfried wilhelm leibniz's, george boole's, alan turing's, claude shannon's, and samuel morse's insight: there are only two objects that a computer has to deal with in order to represent "anything".all the information about any computable problem can be represented using only 0 and 1 (or any other bistable pair that can flip-flop between two easily distinguishable states, such as "on/off", "magnetized/de-magnetized", "high-voltage/low-voltage", etc.).
alan turing's insight: there are only five actions that a computer has to perform in order to do "anything".every algorithm can be expressed in a language for a computer consisting of only five basic instructions:move left one location;
move right one location;
read symbol at current location;
print 0 at current location;
print 1 at current location.
corrado böhm and giuseppe jacopini's insight: there are only three ways of combining these actions (into more complex ones) that are needed in order for a computer to do "anything".only three rules are needed to combine any set of basic instructions into more complex ones:
sequence: first do this, then do that;
 selection: if such-and-such is the case, then do this, else do that;
repetition: while such-and-such is the case, do this.
note that the three rules of boehm's and jacopini's insight can be further simplified with the use of goto (which means it is more elementary than structured programming).


== programming paradigms ==

programming languages can be used to accomplish different tasks in different ways. common programming paradigms include:

functional programming, a style of building the structure and elements of computer programs that treats computation as the evaluation of mathematical functions and avoids state and mutable data. it is a declarative programming paradigm, which means programming is done with expressions or declarations instead of statements.
imperative programming, a programming paradigm that uses statements that change a program's state. in much the same way that the imperative mood in natural languages expresses commands, an imperative program consists of commands for the computer to perform. imperative programming focuses on describing how a program operates.
object-oriented programming, a programming paradigm based on the concept of "objects", which may contain data, in the form of fields, often known as attributes; and code, in the form of procedures, often known as methods. a feature of objects is that an object's procedures can access and often modify the data fields of the object with which they are associated. thus object-oriented computer programs are made out of objects that interact with one another.
service-oriented programming, a programming paradigm that uses "services" as the unit of computer work, to design and implement integrated business applications and mission critical software programsmany languages offer support for multiple paradigms, making the distinction more a matter of style than of technical capabilities.


== academia ==

conferences are important events for computer science research. during these conferences, researchers from the public and private sectors present their recent work and meet. unlike in most other academic fields, in computer science, the prestige of conference papers is greater than that of journal publications. one proposed explanation for this is the quick development of this relatively new field requires rapid review and distribution of results, a task better handled by conferences than by journals.


== education ==

computer science, known by its near synonyms, computing, computer studies, has been taught in uk schools since the days of batch processing, mark sensitive cards and paper tape but usually to a select few students. in 1981, the bbc produced a micro-computer and classroom network and computer studies became common for gce o level students (11–16-year-old), and computer science to a level students. its importance was recognised, and it became a compulsory part of the national curriculum, for key stage 3 & 4. in september 2014 it became an entitlement for all pupils over the age of 4.in the us, with 14,000 school districts deciding the curriculum, provision was fractured. according to a 2010 report by the association for computing machinery (acm) and computer science teachers association (csta), only 14 out of 50 states have adopted significant education standards for high school computer science.israel, new zealand, and south korea have included computer science in their national secondary education curricula, and several others are following.


== see also ==


== notes ==


== references ==


== further reading ==


== external links ==

computer science at curlie
scholarly societies in computer science archived june 23, 2011, at the wayback machine
what is computer science?
best papers awards in computer science since 1996
photographs of computer scientists by bertrand meyer
eecs.berkeley.edu


=== bibliography and academic search engines ===
citeseerx (article): search engine, digital library and repository for scientific and academic papers with a focus on computer and information science.
dblp computer science bibliography (article): computer science bibliography website hosted at universität trier, in germany.
the collection of computer science bibliographies (collection of computer science bibliographies)


=== professional organizations ===
association for computing machinery
ieee computer society
informatics europe
aaai
aaas computer science


=== misc ===
computer science—stack exchange: a community-run question-and-answer site for computer science
what is computer science archived february 18, 2015, at the wayback machine
is computer science science?
computer science (software) must be considered as an independent discipline.